import 'package:flutter/material.dart';
import 'package:firebase_core/firebase_core.dart'; // Import Firebase Core
import 'package:provider/provider.dart';

// Import your Firebase options generated by FlutterFire CLI (if you use it)
// Or ensure your google-services.json and GoogleService-Info.plist are set up
// import 'firebase_options.dart'; // This file is auto-generated by `flutterfire configure`

// Import screens
import 'screens/onboarding_screen.dart';
import 'screens/main_screen.dart';
import 'screens/history_screen.dart';
import 'screens/auth_gate_screen.dart'; // A screen to handle auth state

// Import providers/services
import 'providers/auth_provider.dart';
import 'providers/app_state_provider.dart';
import 'services/database_service.dart'; // For initializing DB service if needed

void main() async {
  WidgetsFlutterBinding.ensureInitialized();
  // Initialize Firebase
  await Firebase.initializeApp(
    // If you use `flutterfire configure`, you can use:
    // options: DefaultFirebaseOptions.currentPlatform,
  );
  runApp(MyApp());
}


class MyApp extends StatelessWidget {
  const MyApp({super.key});

  // This widget is the root of your application.
  @override
  Widget build(BuildContext context) {
    return MultiProvider(
      providers: [
        Provider<DatabaseService>(create: (_) => DatabaseService()), // Provide DatabaseService
        ChangeNotifierProvider(create: (ctx) => AuthProvider(ctx.read<DatabaseService>())), // AuthProvider depends on DatabaseService
        ChangeNotifierProvider(create: (_) => AppStateProvider()),
      ],
      child: MaterialApp(
        title: 'AI Coin Toss & Report',
        theme: ThemeData(
          primarySwatch: Colors.indigo, // Example theme
          colorScheme: ColorScheme.fromSeed(seedColor: Colors.indigoAccent),
          visualDensity: VisualDensity.adaptivePlatformDensity,
          fontFamily: 'Inter', // Make sure you have this font or remove/change it
          cardTheme: CardThemeData(
            elevation: 2,
            shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(12)),
          ),
          elevatedButtonTheme: ElevatedButtonThemeData(
            style: ElevatedButton.styleFrom(
              shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(8)),
              padding: const EdgeInsets.symmetric(horizontal: 20, vertical: 12),
            ),
          ),
        ),
        home: AuthGateScreen(), // Start with AuthGate to check login status
        routes: {
          AuthGateScreen.routeName: (ctx) => AuthGateScreen(),
          OnboardingScreen.routeName: (ctx) => OnboardingScreen(),
          MainScreen.routeName: (ctx) => MainScreen(),
          HistoryScreen.routeName: (ctx) => HistoryScreen(),
        },
      ),
    );
  }
}
